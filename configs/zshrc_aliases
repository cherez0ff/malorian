# aliases
alias tree1="ls -R | grep \":$\" | sed -e 's/:$//' -e 's/[^-][^\/]*\//--/g' -e 's/^/ /' -e 's/-/|/'"
alias ls='ls -l -F -h -t --author --time-style=long-iso --group-directories-first --color=always'
alias rg='rg --hidden --ignore-case --max-columns 500 --no-ignore --pretty'
alias rgl='rg --hidden --no-ignore --pretty --fixed-strings -- ' # literal grep
alias genpass="strings /dev/urandom | grep -o '[[:alnum:]]' | head -n 18 | tr -d '\n' | xclip -sel clip"
alias clip='xclip -sel clip'
alias lsof1='sudo lsof -i -P -n'
alias lsof2='sudo lsof -i -P -n | cut -f 1 -d " "| uniq | tail -n +2'
alias ps1='ps afuxk pid | less -S'
alias tmux='tmux -2' # Needed for 256 color tmux to work
alias sclf="sudo systemctl list-units --state=failed"
alias jctl1="sudo journalctl -b --priority=warning"
alias jctl2="sudo journalctl --no-pager --since today --grep 'fail|error|fatal' --output json | jq '._EXE' | sort | uniq -c | sort --numeric --reverse --key 1"
alias dmesg1='sudo dmesg -l 1,2,3,4 --color=always --ctime -x'
alias less='less --IGNORE-CASE'
alias grep="grep -i"
alias mgrep1="grep -v '^$'" # remove empty lines
alias mgrep2="grep -v '^[[:space:]]*$'" # remove lines what only consists of spaces
alias mgrep3="grep -v '^[[:space:]]*#'" # remove comment-lines like #123
alias mgrep4="grep -v '^[[:space:]]*//'" # remove comment-lines like //123
alias mgrep5="awk '!x[$0]++'" # remove duplicates
alias mgrep="mgrep1 | mgrep2 | mgrep3 | mgrep4 | mgrep5"
alias ip1="ip -br a | awk '{print \$3}' | grep -v '^$' | awk -F'/' '{print \$1}' | sort"
alias tmpd='cd $(mktemp -d)'
alias vim='nvim'
alias fd='fd --hidden --no-ignore --ignore-case --absolute-path --color never'
alias matrix='echo -ne "\e[32m" ; while true ; do echo -ne "\e[$(($RANDOM % 2 + 1))m" ; tr -c "[:print:]" " " < /dev/urandom | dd count=1 bs=50 2> /dev/null ; done'
alias rmdirs='find . -type d -empty -delete' # delete empty dirs
alias chown='chown --preserve-root' # safe measure
alias jq1='jq "."'
alias firejail1='firejail --net=none --private=/opt/home --seccomp --apparmor --noroot'

alias lsh="source-highlight -s sh --failsafe -f esc --style-file=esc.style | /bin/less"
alias lpy="source-highlight -s py --failsafe -f esc --style-file=esc.style | /bin/less"
alias ljs="source-highlight -s js --failsafe -f esc --style-file=esc.style | /bin/less"
alias lyml="source-highlight -s yaml --failsafe -f esc --style-file=esc.style | /bin/less"
alias ljson="source-highlight -s json --failsafe -f esc --style-file=esc.style | /bin/less"
alias lxml="source-highlight -s xml --failsafe -f esc --style-file=esc.style | /bin/less"

alias x='xargs'
alias gitlog='git --no-pager log'

function clipz() {
  gzip -f | base64 -w 0 | clip
}

function gzb64() {
  cat $1 | gzip -f | base64 -w 0 > $1.bz2.b64
}

function ungzb64() {
  echo "cat $1 | base64 -d | gunzip > original_$1"
}


function del {
  tr -d "[$1]"
}

function awk1 {
  awk '{print $'"$1"'}'
}

function diff1 {
  # show $1 without $2
  grep -v -f $2 $1 2>&-
}

#exports
export PAGER='less'
export TERM='xterm-256color'
export PATH="$PATH:$HOME/.local/bin" # python3 pip packages
export PATH="$PATH:$HOME/go/bin/" # go packages
export PATH="$PATH:$HOME/.cargo/bin" # rust (cargo) packages
export PATH="$PATH:$HOME/.scripts" # my tools
# export DISABLE_LS_COLORS='true' # Need this so on-my-zsh will not override my ls alias

#functions
function scr() {
  sudo systemctl restart "$1"
  sudo systemctl status "$1" | head -n 3
  sleep 2
  sudo journalctl -f --since "5 seconds ago" --unit "$1"
}

function rg1() {
  grep -RnisI --color=auto "$1" *
}

function dd1() {
  sudo dd if="$1" of="$2" oflag=sync status=progress bs=8M
}

function du1() {
  du -s -h "$1" 2>/dev/null
}

function cheat() {
  curl -s "https://cheat.sh/$1" | less
}

function whatpkg() {
  lynx "https://command-not-found.com/$1"
}

function mountfat() {
  # Only FAT, vFAT, exFAT
  mount -o umask=0022,uid=1000,gid=1000 "$1" "$2"
}

# TODO: add help function with list of images & versions
#function dockersh() {
#    dirname=${PWD##*/}
#    image=$1
#    if [ "$1" = "jenkins" ]; then image='jenkins/jenkins'; fi
#    if [ "$1" = "impacket" ]; then image='rflathers/impacket'; fi
#    if [ "$1" = "msf" ]; then image='metasploitframework/metasploit-framework'; fi
#    if [ -z $2 ] ; then
#        docker run --rm -it --entrypoint=/bin/bash -v `pwd`:/${dirname} -w /${dirname} "$image" || docker run --rm -it --entrypoint=/bin/sh -v `pwd`:/${dirname} -w /${dirname} "$image";
#    else
#        docker run --rm -it --entrypoint=/bin/bash -v `pwd`:/${dirname} -w /${dirname} "$2" "$image" || docker run --rm -it --entrypoint=/bin/sh -v `pwd`:/${dirname} -w /${dirname} "$2"  "$image";
#    fi
#}

function ex ()
{
  if [ -f $1 ] ; then
    case $1 in
      *.tar)       tar xf $1    ;;
      *.tar.bz2)   tar xjf $1   ;;
      *.tbz2)      tar xjf $1   ;;
      *.tar.gz)    tar xzf $1   ;;
      *.tgz)       tar xzf $1   ;;
      *.bz2)       bunzip2 --keep $1   ;;
      *.gz)        gunzip --gunzip $1    ;;
      *.Z)         uncompress --keep $1;;
      *.rar)       unrar x $1   ;;
      *.zip)       unzip $1     ;;
      *.7z)        7z x $1      ;;
      *.deb)       ar x $1      ;;
      *.tar.xz)    tar xf $1    ;;
      *.tar.zst)   unzstd $1    ;;
      *.zst)       unzstd $1    ;;
      *)           echo "'$1' cannot be extracted via ex()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

alias archive='ouch compress'
alias ex='ouch decompress'

# less with colors
export LESSOPEN="| /usr/bin/src-hilite-lesspipe.sh %s"
export LESS=' -R'


function env1() {
  # env > $1; surce $1
  cat "$1" | sed -e '/^#/d;/^\s*$/d' -e "s/'/'\\\''/g" -e "s/=\(.*\)/='\1'/g" -e 's/^/export /'
}

function env2() {
  # gitlab env to bash source'able script
  cat "$1" | sed -e '/^#/d;/^\s*$/d' -e "s/: \(.*\)/=\1/g" -e 's/^/export /'
}

function env3() {
  # gitlab env to docker env
  cat "$1" | sed -e '/^#/d;/^\s*$/d' -e "s/: \(.*\)/=\1/g" -e "s/'//g" -e 's/"//g'
}

function convert1() {
  convert -format "$2" "$1"
}

function url() {
  python3 -c "import urllib.parse; print(urllib.parse.quote_plus('$1'))"
}

# un-base64
function ub() {
   echo -n "$1" | base64 -d | rev | cut -c1- | rev
}

function dountill() {
  until eval "$1"; do echo 'Sleep for 1 sec' && sleep 1; done
}

# like rm -rf, but alaso deletes hidden files
function rmrf() {
  if [[ "$1" ]]; then
    find "$1" -name . -o -prune -exec rm -rf -- {} +
  else
    echo 'Define path!'
  fi
}

alias klin='kubectl lineage'
alias kgetall='kubectl api-resources --verbs=list --namespaced -o name | grep -v events | xargs -n 1 kubectl get --ignore-not-found  --show-kind'
function kget() {
  kubectl get $1 -o yaml | kubectl neat | lyml
}

function cut1 {
  cut -c"$1"-
}

function cut2 {
  rev | cut -c"$1"- | rev
}
